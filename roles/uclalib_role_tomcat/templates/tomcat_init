#!/bin/bash

# Tomcat: Start/Stop Tomcat Instance
#
# chkconfig: - 90 10
# description: Tomcat is a Java application Server.

### BEGIN INIT INFO
# Provides: a Tomcat instance
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Default-Start:
# Default-Stop:
# Short-Description: Start up the Tomcat server daemon
# Description:       Tomcat is a Java application Server.
#                    This service starts up the Tomcat server daemon.
### END INIT INFO

NAME=`{{ basename_path }}/basename $0`

# if this is a symlink from rc#.d, the S## part is not useful, filter it out
NAME=`/bin/sed 's/^S[0-9]*//g' <<< $NAME`

# Source function library
if [ -r {{ environment_var_path }}/${NAME} ] ; then
	. {{ environment_var_path }}/${NAME}
else
	echo "Could not source a configuration file for the ${NAME} Tomcat application."
	exit 1
fi

# This start-up script ensures Tomcat starts as a non-root user defined in /etc/sysconfig/${NAME}
if [ -z "$TOMCAT_USER" ] ; then
	echo "No TOMCAT_USER is defined for the ${NAME} Tomcat application."
        exit 1
fi

PID=`pgrep -u $TOMCAT_USER -nf "$CATALINA_BASE"`

RETVAL=0
start(){
	echo "Starting ${NAME}: "

	if [ -z "$PID" ] ; then

		if [ -x "/sbin/runuser" ]; then
			sucmd="/sbin/runuser"
		else
			sucmd="su"
		fi

		$sucmd -m $TOMCAT_USER -c "$CATALINA_HOME/bin/startup.sh"

		RETVAL=$?
		echo
		[ $RETVAL -eq 0 ] && touch $LOCKFILE
		return $RETVAL
	else
		echo "${NAME} is already running with PID $PID"
	fi
}

stop(){
	echo "Shutting down ${NAME}: "

	if [ -n "$PID" ] ; then

		if [ -x "/sbin/runuser" ]; then
			sucmd="/sbin/runuser"
		else
			sucmd="su"
		fi

		$sucmd -m $TOMCAT_USER -c "$CATALINA_HOME/bin/shutdown.sh 20 -force"

		RETVAL=$?
		echo
		[ $RETVAL -eq 0 ] && rm -f $LOCKFILE
		return $RETVAL
	else
		echo "${NAME} is not running"
	fi
}

status()
{
	if [ $PID ]; then
		# running
		echo "${NAME} (pid  $PID) is running..."
	else
		# not running
		echo "${NAME} is stopped"
	fi
}

case "$1" in
   start)
      start
      ;;
   stop)
      stop
      ;;
   restart)
      stop
      start
      ;;
   status)
      status
      ;;
   *)
      echo $"Usage: $0 {start|stop|status}"
      exit 1
      ;;
esac
exit $RETVAL
