---

- name: Install required project gems
  bundler:
    state: present
    chdir: "/home/{{ ansible_username }}/{{ project_name }}"

- name: Execute capistrano deployment of project
  become_user: "{{ ansible_username }}"
  shell: >
    BRANCH={{ git_repo_branch }} bundle exec cap {{ capistrano_environment | d('localhost') }} deploy
    {{ (capistrano_roles | d (false)) | ternary (cap_role_output, '') }} {{ (cap_branding_symlink_path | d (false)) | ternary (cap_branding_symlink_output, '') }}
  args:
    chdir: /home/{{ ansible_username }}/{{ project_name }}
  vars:
    cap_role_output: " ROLES={{ capistrano_roles | d ('place_holder') | join (',') }}"
    cap_branding_symlink_output: " BRANDING_SYMLINK_PATH={{ cap_branding_symlink_path | d (false) }}"

- name: Restart Apache HTTPD to reload passenger application
  systemd:
    name: httpd
    state: restarted

- name: Check database
  include_tasks:
    file: check-db.yml
    apply:
      tags: hyrax-check-db
      become_user: "{{ capistrano_user }}"
  when: check_hyrax | d (False)
  vars:
    tee_path: "/tmp/{{ ansible_date_time.epoch }}-{{ step_name }}.txt"
  tags: hyrax-check-db

- name: Create test database for developers' box (optional)
  become_user: "{{ ansible_username }}"
  shell: >
    RAILS_ENV=test bundle exec rake db:setup
  args:
    chdir: "/home/{{ ansible_username }}/{{ project_name }}/"
  tags: [ 'never', 'development' ]

- name: Clean-up ansible user project deploy directory
  file:
    path: "/home/{{ ansible_username }}/{{ project_name }}"
    state: absent
  tags:
    - always
