- block:
    - name: Get stats on local output dir
      shell: du -sh {{ __mydumper_backup.dir_path }}
      register: outputdir_size_info
    
    - debug:
        var: outputdir_size_info

    - name: Create local output report and attachment
      set_fact:
        __local_output_bool: true
        __local_output_report: '{{ local_output_report }}'
        __local_output_attachment:
          - title: Local Backup on Disk
            text: '{{ local_output_report }}'
      vars:
        local_output_report: |
          The mydumper outputdir is located at:
          {{ __mydumper_backup.dir_path }}
          The file size is:
          {{ outputdir_size_info.stdout.split()[0] }}
  when: not __mydumper_backup.delete_output | d (true)

- name: Create Report and Console Link
  set_fact:
    __s3_bool: true
    __s3_report: '{{ s3_report }}'
    __s3_attachment: 
      - title: Console Link to Backup Directory
        title_link: '{{ s3_console_link }}'
        text: |
          This is a console link to the report, please log into AWS console before using the link.
          Report Details:
          {{ s3_report }}
  vars:
    s3_report: |
      Backup was sucessfully synced to {{ key_path }}
      File size: {{ s3_sync_info.uploads | map(attribute="bytes") | map("int") | sum(start=0) | human_readable }}
    key_path: '{{ __mydumper_backup.s3.bucket }}/{{ __mydumper_backup.s3.key_prefix }}/{{ __mydumper_backup.dir_path | basename }}'
    s3_console_link: '{{ mydumper_backup_console_base_url }}/{{ key_path }}/?region={{ __mydumper_backup.s3.region}}'
  when:
  
- name: Gather and Delegate facts on localhost
  setup:
  delegate_to: localhost
  delegate_facts: true

- name: Build default attachment and message variables
  set_fact:
    mydumper_backup_slack_msg: '{{ localhost_env.AWX_HOST is defined | ternary (awx, core) }}'
    mydumper_backup_slack_attachments: '{{ __local_output_attachment | d ([]) + __s3_attachment | d ([]) }}'
  vars:
    awx: 'Job {{"#"}}{{ localhost_env.JOB_ID | d () }} Details (Mydumper Backup)'
    core: Mydumper Backup Details
    localhost_env: '{{ hostvars["localhost"]["ansible_facts"]["env"] }}'