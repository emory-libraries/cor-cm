---
# tasks file for wm_role_Shibboleth_SP

#environment:
    #http_proxy: http://webproxy.emory.net:3128
    #https_proxy: http://webproxy.emory.net:3128
    #no_proxy: localhost,127.0.0.1,towerpoc1,answebpoc1.cc.emory.edu


- name:  0-1/ Check for RHEL7 or CentOS7.
  #command: echo "Checking OS version..."
  set_fact:
        Shib_Repo: "{{ RHEL7 }}"
  when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "7")
        or (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")


- name:  0-2/ Check for RHEL6.
  #command: echo "Checking OS version..."
  set_fact:
        Shib_Repo: "{{ RHEL6 }}"
  when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6")


- name:  0-3/ Check for CentOS6.
  #command: echo "Checking OS version..."
  set_fact:
        Shib_Repo: "{{ CentOS6 }}"
  when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "6")
  


- name:  1/ Add Shibboleth repo.
  get_url:
      url: "{{ Shib_Repo }}"
      #url: "{{ RHEL7 }}"
      dest: "{{ YumRepo }}"
      mode: 0777
      force: no
  when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "7")
        or (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7")


- name:  2/ Install or upgrade shibboleth based on value of state..
  yum:
       name: shibboleth.x86_64
       enablerepo: security_shibboleth
       state: "{{ State }}" 


- name: 3/ Disable Shibboleth repo
  command:  yum-config-manager --disable security_shibboleth


- name: 4/ Add shibboleth2.xml from template directory.
  template:
        src: shibboleth2.xml
        dest: "{{ SP_Home }}"
        force:  yes
        owner:  tomcat
        group:  tomcat
        backup: yes
  when: State == 'present'


- name:  5/ Get IdP metadata.
  get_url:
      url: "{{ Prod_IdP_MetadataURL }}"
      dest: "{{ Prod_IdP_MetadataFile }}" 
      mode: 0755
      owner:  shibd
      group:  shibd
      force: no


- name:  6/  Get QA IdP metadata
  get_url:
      url: "{{Qa_IdP_MetadataURL}}"
      dest: "{{Qa_IdP_MetadataFile}}" 
      mode: 0755
      owner:  shibd
      group:  shibd
      force: no


- name:  7/  Get DEV IdP metadata
  get_url:
      url: "{{ Dev_IdP_MetadataURL }}"
      dest: "{{ Dev_IdP_MetadataFile }}" 
      mode: 0755
      owner:  shibd
      group:  shibd
      force: no



- name:  8/  Get Emory Attribue Map
  get_url:
      url: "{{ Emory_AttributeMapUrl }}"
      dest: "{{ Emory_AttributeMap }}"
      mode: 0755
      owner:  shibd
      group:  shibd
      force: no


- name:  9/  Add Emory IdP Attribute Map.
  copy:
      src: "{{ Emory_AttributeMap }}"
      dest: "{{ AttributeMap }}" 
      #  yes will go to the remote/target machine for the src.
      #  no (the dafault) will search for src at originating/master machine, ie, the Ansible server.
      remote_src: yes
      backup: yes
      mode: 0755
      owner:  shibd
      group:  shibd
  when: State == 'present'


- name: 10/  Unzip SP html files.
  unarchive:
      src:  "{{ Emory_SPConfFiles }}"
      dest:  "{{ SP_Home }}"
      remote_src: yes
  when: State == 'present'


- name:  11/  Move html directory
  command:  rsync -a /etc/shibboleth/SpConfFiles/html/ /etc/shibboleth/html/
  when: State == 'present'


- name:  12/  Chown shibd:shibd
  file:
      path: "{{ SP_Home }}" 
      owner:  shibd
      group:  shibd
      recurse: yes


- name: 13/ Set service httpd on
  service: name=httpd enabled=yes


- name: 14/ Set service shibd on
  service: name=shibd enabled=yes


- name:   15/  Stop Apache.
  service: name=httpd state=stopped


- name:   16/  Start shibd
  service: name=shibd state=started


- name:   17/  Start Apache.
  service: name=httpd state=started


