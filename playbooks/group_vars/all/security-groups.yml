---
sg_pre: "security-group-{{ aws_region }}"
sg_managed: "** This security group is managed by Ansible, any manual changes may be overridden **"
ec2_groups: #manage-sg
  - name: '{{ sg_pre }}-t-http/https-to-self-arch'
    description: Group that allows http only to other servers in group
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-arch'
        rule_desc: HTTP/HTTPS
    rules_egress:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-arch'
        rule_desc: HTTP/HTTPS
  - name: '{{ sg_pre }}-t-http/https-to-self-test'
    description: Group that allows http only to other servers in group
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-test'
        rule_desc: HTTP/HTTPS
    rules_egress:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-test'
        rule_desc: HTTP/HTTPS
  - name: '{{ sg_pre }}-t-http/https-to-self-prod'
    description: Group that allows http only to other servers in group
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-prod'
        rule_desc: HTTP/HTTPS
    rules_egress:
      - proto: tcp
        ports:
          - 80
          - 443
        group_name: '{{ sg_pre }}-t-http/https-to-self-prod'
        rule_desc: HTTP/HTTPS
  - name: '{{ sg_pre }}-tp-ssh'
    description: 'SSH {{ sg_managed }}'
    rules:
      - proto: tcp
        ports:
          - 22
        cidr_ip: 0.0.0.0/0
        rule_desc: Open SSH to internet
    rules_egress:
      - proto: tcp
        ports:
          - 22
        rule_desc: Open SSH to internet
        cidr_ip: 0.0.0.0/0
  - name: '{{ sg_pre }}-tp-apache'
    description: "HTTP/HTTPS  {{ sg_managed }}"
    rules:
      - proto: tcp
        ports:
          - 80
          - 443
        cidr_ip: 0.0.0.0/0
        rule_desc: Open apache websever to internet
    rules_egress:
      - proto: tcp
        ports:
          - 80
          - 443
        cidr_ip: 0.0.0.0/0
        rule_desc: Open apache websever ports to internet
  - name: "{{ sg_pre }}-t-mysql"
    description: "Connection to test MySQL instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 3306
        group_name: dlp-tst-rdsmys-sz-sec 
        rule_desc: MySQL
    rules_egress:
      - proto: tcp
        ports: 3306
        group_name: dlp-tst-rdsmys-sz-sec
        rule_desc: MySQL
  - name: "{{ sg_pre }}-p-mysql"
    description: "Connection to production MySQL instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 3306
        group_name: dlp-prd-rdsmys-mz-sec 
        rule_desc: MySQL
    rules_egress:
      - proto: tcp
        ports: 3306
        group_name: dlp-prd-rdsmys-mz-sec 
        rule_desc: MySQL
  - name: "{{ sg_pre }}-t-nfs"
    description: "Connection to test NFS endpoint {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 2049
        group_name: "{{ sg_pre }}-t-nfs"
        rule_desc: NFS
    rules_egress:
      - proto: tcp
        ports: 2049
        group_name: "{{ sg_pre }}-t-nfs"
        rule_desc: NFS
  - name: "{{ sg_pre }}-p-nfs"
    description: "Connection to production NFS endpoint {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 2049
        group_name: "{{ sg_pre }}-p-nfs"
        rule_desc: NFS
    rules_egress:
      - proto: tcp
        ports: 2049
        group_name: "{{ sg_pre }}-p-nfs"
        rule_desc: NFS
  - name: "{{ sg_pre }}-t-redis"
    description: "Connection to test redis/elasticache instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 6379
        group_name: "{{ sg_pre }}-t-redis"
        rule_desc: Redis
    rules_egress:
      - proto: tcp
        ports: 6379
        group_name: "{{ sg_pre }}-t-redis"
        rule_desc: Redis
  - name: "{{ sg_pre }}-p-redis"
    description: "Connection to production redis/elasticache instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 6379
        group_name: "{{ sg_pre }}-p-redis"
        rule_desc: Redis
    rules_egress:
      - proto: tcp
        ports: 6379
        group_name: "{{ sg_pre }}-p-redis"
        rule_desc: Redis
  - name: "{{ sg_pre }}-p-zookeeper"
    description: "Connection to production zookeeper instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: [2181, 2888, 3888]
        group_name: "{{ sg_pre }}-p-zookeeper"
        rule_desc: ZK internal communications
      - proto: tcp
        ports: 8082
        cidr_ip: 0.0.0.0/0
        rule_desc: ZK admin console
    rules_egress:
      - proto: tcp
        ports: [2181, 2888, 3888]
        group_name: "{{ sg_pre }}-p-zookeeper"
        rule_desc: ZK internal communications
      - proto: tcp
        ports: 8082
        cidr_ip: 0.0.0.0/0
        rule_desc: ZK admin console
  - name: "{{ sg_pre }}-t-zookeeper"
    description: "Connection to test zookeeper instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: [2181, 2888, 3888]
        group_name: "{{ sg_pre }}-t-zookeeper"
        rule_desc: ZK internal communications
      - proto: tcp
        ports: 8082
        cidr_ip: 0.0.0.0/0
        rule_desc: ZK admin console
    rules_egress:
      - proto: tcp
        ports: [2181, 2888, 3888]
        group_name: "{{ sg_pre }}-t-zookeeper"
        rule_desc: ZK internal communications
      - proto: tcp
        ports: 8082
        cidr_ip: 0.0.0.0/0
        rule_desc: ZK admin console
  - name: "{{ sg_pre }}-t-solr"
    description: "Connection to test solr instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 8983
        group_name: "{{ sg_pre }}-t-solr"
        rule_desc: SOLR
    rules_egress:
      - proto: tcp
        ports: 8983
        group_name: "{{ sg_pre }}-t-solr"
        rule_desc: SOLR
  - name: "{{ sg_pre }}-p-solr"
    description: "Connection to production solr instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 8983
        group_name: "{{ sg_pre }}-p-solr"
        rule_desc: SOLR
    rules_egress:
      - proto: tcp
        ports: 8983
        group_name: "{{ sg_pre }}-p-solr"
        rule_desc: SOLR
  - name: dlp-tst-rdsmys-sz-sec
    description: "DB security group for test instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 3306
        group_name: "{{ sg_pre }}-t-mysql"
        rule_desc: MySQL
    rules_egress:
      - proto: tcp
        ports: 3306
        group_name: "{{ sg_pre }}-t-mysql"
        rule_desc: MySQL
  - name: dlp-prd-rdsmys-mz-sec
    description: "DB security group for prod instances {{ sg_managed }}"
    rules:
      - proto: tcp
        ports: 3306
        group_name: "{{ sg_pre }}-p-mysql"
        rule_desc: MySQL
    rules_egress:
      - proto: tcp
        ports: 3306
        group_name: "{{ sg_pre }}-p-mysql"
        rule_desc: MySQL

